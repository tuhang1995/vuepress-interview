import{_ as n,o as s,c as a,d as t}from"./app.7686b0dd.js";var p="/vuepress-interview/assets/promise.3c0c0170.png",e="/vuepress-interview/assets/promise-resolve.234dd182.png",o="/vuepress-interview/assets/promise-reject.d775b7b8.png";const c={},l=t(`<h1 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> Promise</h1><h2 id="promise\u4E0E\u771F\u5B9E\u751F\u6D3B\u7684\u5BF9\u6BD4" tabindex="-1"><a class="header-anchor" href="#promise\u4E0E\u771F\u5B9E\u751F\u6D3B\u7684\u5BF9\u6BD4" aria-hidden="true">#</a> Promise\u4E0E\u771F\u5B9E\u751F\u6D3B\u7684\u5BF9\u6BD4</h2><ol><li>&quot;\u751F\u4EA7\u8005\u4EE3\u7801&quot; \u4F1A\u505A\u4E00\u4E9B\u4E8B\u60C5\uFF0C\u5E76\u4E14\u4F1A\u9700\u8981\u4E00\u4E9B\u4E8B\u4EF6\u3002\u4F8B\u5982, \u901A\u8FC7\u7F51\u7EDC\u52A0\u8F7D\u6570\u636E</li><li>&quot;\u6D88\u8D39\u8005\u4EE3\u7801&quot; \u60F3\u8981\u518D&quot;\u751F\u4EA7\u8005\u4EE3\u7801&quot;\u5B8C\u6210\u5DE5\u4F5C\u7684\u7B2C\u4E00\u4E2A\u4E8B\u4EF6\u5C31\u80FD\u83B7\u53D6\u5176\u6210\u679C, \u8BB8\u591A\u51FD\u6570\u53EF\u80FD\u90FD\u9700\u8981\u7167\u987E\u7ED3\u679C</li><li><strong>promise</strong> \u662F\u5C06 &quot;\u751F\u4EA7\u8005\u4EE3\u7801&quot; \u548C &quot;\u6D88\u8D39\u8005\u4EE3\u7801&quot; \u8FDE\u63A5\u5728\u4E00\u8D77\u7684\u4E00\u4E2A\u7279\u6B8AJavaScript\u5BF9\u8C61</li></ol><ul><li>promise\u5BF9\u8C61\u7684\u6784\u9020\u5668(constructor) \u8BED\u6CD5:</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// executor (\u751F\u4EA7\u8005\u4EE3\u7801)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u4F20\u9012\u7ED9 <code>new Promise</code>\u7684\u51FD\u6570\u88AB\u79F0\u4E3A <strong>executor</strong>\u3002\u5F53new Promise \u88AB\u521B\u5EFA\u65F6\uFF0Cexecutor\u4F1A\u88AB\u81EA\u52A8\u8FD0\u884C\uFF0C\u5B83\u5305\u542B\u6700\u7EC8\u5E94\u4EA7\u51FA\u7ED3\u679C\u7684\u751F\u4EA7\u8005\u4EE3\u7801</li><li>\u5B83\u7684\u53C2\u6570 <code>resolve</code> \u548C <code>reject</code> \u662F\u7531 JavaScript\u672C\u8EAB\u63D0\u4F9B\u7684\u56DE\u8C03, \u6211\u4EEC\u7684\u4EE3\u7801\u4EC5\u5728 executor \u7684\u5185\u90E8</li><li>\u5F53<code>executor</code>\u83B7\u5F97\u4E86\u7ED3\u679C, \u65E0\u8BBA\u662F\u65E9\u8FD8\u662F\u665A, \u90FD\u5E94\u8BE5\u8C03\u7528\u4E0B\u5217\u56DE\u8C03\u4E4B\u4E00 <ol><li>resolve(value) - \u5982\u679C\u4EFB\u52A1\u6210\u529F\u5B8C\u6210\u5E76\u5E26\u6709\u7ED3\u679C</li><li>reject(error) - error\u5373\u4E3Aerror\u5BF9\u8C61</li></ol></li></ul><hr><p>\u7531 <code>new Promise</code>\u6784\u9020\u5668\u8FD4\u56DE\u7684promise \u5BF9\u8C61\u5177\u6709\u4EE5\u4E0B\u5185\u90E8\u5C5E\u6027</p><ol><li>state - \u6700\u521D\u662F<code>pending</code>, \u7136\u540E\u518D<code>resolve</code>\u88AB\u8C03\u7528\u65F6\u53D8\u6210 <code>fulfilled</code>, \u6216\u8005\u5728<code>reject</code>\u8C03\u7528\u65F6\u53D8\u6210<code>rejected</code></li><li>result - \u6700\u521D\u662F <code>undefined</code>, \u7136\u540E\u518D <code>resolve(value)</code> \u88AB\u8C03\u7528\u65F6\u6210\u4E3A<code>value</code>, \u6216\u8005\u5728<code>reject(error)</code> \u53D8\u6210 <code>error</code></li></ol><p><img src="`+p+`" alt="\u5173\u7CFB\u56FE"></p><h3 id="\u4E00\u4E2A\u6210\u529F\u7684\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E2A\u6210\u529F\u7684\u4F8B\u5B50" aria-hidden="true">#</a> \u4E00\u4E2A\u6210\u529F\u7684\u4F8B\u5B50</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E00\u4E2Apromise \u6784\u9020\u5668\u548C\u4E00\u4E2A\u7B80\u5355\u7684executor\u51FD\u6570</span>
<span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;done&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D1\u751F\u4E86\u4E24\u4EF6\u4E8B</p><ol><li>executor\u88AB\u81EA\u52A8\u4E14\u7ACB\u5373\u8C03\u7528 (\u901A\u8FC7 new Promise)</li><li>executor\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570: resolve \u548C reject</li></ol><p><img src="`+e+`" alt="\u5173\u7CFB\u56FE"></p><hr><h3 id="\u4E00\u4E2A\u5931\u8D25\u7684\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E2A\u5931\u8D25\u7684\u4F8B\u5B50" aria-hidden="true">#</a> \u4E00\u4E2A\u5931\u8D25\u7684\u4F8B\u5B50</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1 \u79D2\u540E\u53D1\u51FA\u5DE5\u4F5C\u5DF2\u7ECF\u88AB\u5B8C\u6210\u7684\u4FE1\u53F7\uFF0C\u5E76\u5E26\u6709 error</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Whoops!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+o+`" alt="\u5173\u7CFB\u56FE"></p><p>executor \u5E94\u8BE5\u6267\u884C\u4E00\u9879\u5DE5\u4F5C, \u7136\u540E\u8C03\u7528resolve\u548Creject\u6765\u6539\u53D8promise\u5BF9\u8C61\u7684\u72B6\u6001</p><p>\u4E0E\u6700\u521D\u7684 \u201Cpending\u201D promise \u76F8\u53CD\uFF0C\u4E00\u4E2A resolved \u6216 rejected \u7684 promise \u90FD\u4F1A\u88AB\u79F0\u4E3A \u201Csettled\u201D\u3002</p><hr><p><strong>\u53EA\u80FD\u6709\u4E00\u4E2A\u7ED3\u679C\u6216\u4E00\u4E2Aerror</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u2026&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u88AB\u5FFD\u7565</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;\u2026&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u88AB\u5FFD\u7565</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>resolve\u6216reject\u53EF\u4EE5\u7ACB\u5373\u8FDB\u884C</strong></p><p>\u5B9E\u9645\u4E0A, executor\u901A\u5E38\u662F\u5F02\u6B65\u6267\u884C\u67D0\u4E9B\u64CD\u4F5C, \u5E76\u5728\u4E00\u6BB5\u65F6\u95F4\u540E\u8C03\u7528 resolve/rejected, \u4F46\u8FD9\u4E0D\u662F\u5FC5\u987B\u7684, \u4E5F\u53EF\u4EE5\u7ACB\u5373\u8C03\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>state\u548Cresult\u90FD\u662F\u5185\u90E8\u7684</strong></p><p>Promise \u5BF9\u8C61\u7684 state \u548C result \u5C5E\u6027\u90FD\u662F\u5185\u90E8\u7684\u3002\u6211\u4EEC\u65E0\u6CD5\u76F4\u63A5\u8BBF\u95EE\u5B83\u4EEC\u3002\u4F46\u6211\u4EEC\u53EF\u4EE5\u5BF9\u5B83\u4EEC\u4F7F\u7528 .then/.catch/.finally \u65B9\u6CD5\u3002\u6211\u4EEC\u5728\u4E0B\u9762\u5BF9\u8FD9\u4E9B\u65B9\u6CD5\u8FDB\u884C\u4E86\u63CF\u8FF0\u3002</p><h2 id="\u6D88\u8D39\u8005-then-catch" tabindex="-1"><a class="header-anchor" href="#\u6D88\u8D39\u8005-then-catch" aria-hidden="true">#</a> \u6D88\u8D39\u8005: then, catch</h2><p>Promise \u5BF9\u8C61\u5145\u5F53\u7684\u662F executor\uFF08\u201C\u751F\u4EA7\u8005\u4EE3\u7801\u201D\uFF09\u548C\u6D88\u8D39\u51FD\u6570\u4E4B\u95F4\u7684\u8FDE\u63A5\uFF0C\u540E\u8005\u5C06\u63A5\u6536\u7ED3\u679C\u6216 error\u3002\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528 .then \u548C .catch \u65B9\u6CD5\u6CE8\u518C\u6D88\u8D39\u51FD\u6570\u3002</p><h3 id="then" tabindex="-1"><a class="header-anchor" href="#then" aria-hidden="true">#</a> .then</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>.then\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u51FD\u6570, \u8BE5\u51FD\u6570\u5C06\u5728promise resolved \u63A5\u6536\u5230\u7ED3\u679C\u540E\u6267\u884C .then\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E5F\u662F\u4E00\u4E2A\u51FD\u6570, \u8BE5\u51FD\u6570\u5C06\u5728promise rejected \u63A5\u53D7\u5230error\u4FE1\u606F\u540E\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6210\u529F\u7684\u6848\u4F8B</span>
<span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;done!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// resolve \u8FD0\u884C .then \u4E2D\u7684\u7B2C\u4E00\u4E2A\u51FD\u6570</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 1 \u79D2\u540E\u663E\u793A &quot;done!&quot;</span>
  <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token comment">// \u4E0D\u8FD0\u884C</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5982\u679C\u6211\u4EEC\u53EA\u5BF9\u6210\u529F\u5B8C\u6210\u6709\u540E\u5904\u7406, \u53EF\u4EE5\u53EA\u4E3A.then\u63D0\u4F9B\u4E00\u4E2A\u51FD\u6570\u53C2\u6570</span>
<span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;done!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>alert<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1 \u79D2\u540E\u663E\u793A &quot;done!&quot;</span>

</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="catch" tabindex="-1"><a class="header-anchor" href="#catch" aria-hidden="true">#</a> catch</h3><p>\u5982\u679C\u6211\u4EEC\u53EA\u5BF9error\u611F\u5174\u8DA3, \u53EF\u4EE5\u4F7F\u7528null\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF1A.then(null, errorHandlingFunction)\u3002\u6216\u8005\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528 .catch(errorHandlingFunction)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;Whoops!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// .catch(f) \u4E0E promise.then(null, f) \u4E00\u6837</span>
promise<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>alert<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1 \u79D2\u540E\u663E\u793A &quot;Error: Whoops!&quot;</span>

<span class="token comment">// catch(f) \u8C03\u7528\u662F .then(null, f) \u7684\u5B8C\u5168\u6A21\u62DF, \u5B83\u53EA\u662F\u4E00\u4E2A\u7B80\u5199\u5F62\u5F0F</span>
promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token parameter">f</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// f\u662F\u4F20\u8FDB\u6765\u7684error\u4FE1\u606F</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error(&quot;Whoops!&quot;)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6E05\u7406-finally" tabindex="-1"><a class="header-anchor" href="#\u6E05\u7406-finally" aria-hidden="true">#</a> \u6E05\u7406: finally</h2><p>\u4F5C\u7528: \u65E0\u8BBA promise \u88AB resolve \u8FD8\u662F reject\u3002\u90FD\u4F1A\u6267\u884Cfinally</p><ul><li>finally \u7684\u529F\u80FD\u662F\u8BBE\u7F6E\u4E00\u4E2A\u5904\u7406\u7A0B\u5E8F\u5728\u524D\u9762\u7684\u64CD\u4F5C\u5B8C\u6210\u540E, \u6267\u884C\u6E05\u7406/\u7EC8\u7ED3 <ul><li>\u5982: \u505C\u6B62\u52A0\u8F7D\u6307\u793A\u5668\uFF0C\u5173\u95ED\u4E0D\u518D\u9700\u8981\u7684\u8FDE\u63A5\u7B49</li></ul></li></ul><p><strong>finally(f)</strong> \u5E76\u4E0D\u5B8C\u5168\u662F then(f,f)\u7684\u522B\u540D</p><p>\u5B83\u4EEC\u4E4B\u95F4\u7684\u533A\u522B:</p><ol><li>finally\u5904\u7406\u7A0B\u5E8F (handler) \u6CA1\u6709\u53C2\u6570, \u5728finally\u4E2D, \u4E0D\u77E5\u9053 promise \u662F\u5426\u6210\u529F. \u4F46\u662Ffinally\u7684\u4EFB\u52A1\u662F\u6267\u884C&quot;\u5E38\u89C4&quot;\u7684\u5B8C\u6210\u7A0B\u5E8F</li><li>finally\u5904\u7406\u7A0B\u5E8F\u5C06\u7ED3\u679C\u6216error &#39;\u4F20\u9012&#39;\u7ED9\u4E0B\u4E00\u4E2A\u66F4\u5408\u9002\u7684\u5904\u7406\u7A0B\u5E8F</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6CE8\u610F: \u5982\u679Cfinally\u5199\u5728.then\u540E\u9762, \u4F1A\u5148\u6267\u884C.then \u5728\u6267\u884Cfinally</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u662F\u6210\u529F\u7684promise&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;promise ready&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u5148\u89E6\u53D1</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// &lt;-- .then\u663E\u793Aresolve\u7ED3\u679C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E00\u4E2A<code>promise</code>\u8FD4\u56DE\u7684\u503C\u901A\u8FC7 finally \u4F20\u9012\u7ED9\u4E86\u4E0B\u4E00\u4E2Athen</p><p>\u8FD9\u975E\u5E38\u65B9\u4FBF, \u56E0\u4E3A <code>finally</code>\u5E76\u4E0D\u4EE5\u4E3A\u7740\u5904\u7406\u4E00\u4E2Apromise\u7ED3\u679C. \u65E0\u8BBA\u7ED3\u679C\u662F\u4EC0\u4E48, \u5B83\u90FD\u662F\u8FDB\u884C\u5E38\u89C4\u6E05\u7406\u7684\u5730\u65B9</p><p><strong>\u4E00\u4E2Apromise\u8FD4\u56DEerror\u7684\u793A\u4F8B</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;Promise ready&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u5148\u89E6\u53D1</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &lt;-- .catch \u663E\u793A\u8FD9\u4E2A error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u603B\u7ED3:</p><ol><li>finally \u5904\u7406\u7A0B\u5E8F\u6CA1\u6709\u5F97\u5230\u524D\u4E00\u4E2A\u5904\u7406\u7A0B\u5E8F\u7684\u7ED3\u679C, \u5B83\u6CA1\u6709\u53C2\u6570. \u800C\u8FD9\u4E2A\u7ED3\u679C\u88AB\u4F20\u9012\u7ED9\u4E86\u4E0B\u4E00\u4E2A\u5408\u9002\u7684\u5904\u7406\u7A0B\u5E8F</li><li>\u5982\u679Cfinally\u8FD4\u56DE\u4E86\u4E00\u4E9B\u5185\u5BB9, \u8FD9\u4E9B\u5185\u5BB9\u4E5F\u4F1A\u88AB\u5FFD\u7565</li><li>\u5F53finally\u629B\u51FAerror\u65F6, \u6267\u884C\u5C06\u8F6C\u5230\u6700\u8FD1\u7684 error \u7684\u5904\u7406\u7A0B\u5E8F</li></ol><h4 id="\u6211\u4EEC\u5BF9settled\u7684promise-\u9644\u52A0\u5904\u7406\u7A0B\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6211\u4EEC\u5BF9settled\u7684promise-\u9644\u52A0\u5904\u7406\u7A0B\u5E8F" aria-hidden="true">#</a> \u6211\u4EEC\u5BF9settled\u7684promise \u9644\u52A0\u5904\u7406\u7A0B\u5E8F</h4><p>\u5982\u679Cpromise \u4E3Apending\u72B6\u6001, .then/catch/finally \u5904\u7406\u7A0B\u5E8F(handler) \u5C06\u7B49\u5F85\u5B83\u7684\u7ED3\u679C</p><p>\u6709\u65F6\u5019, \u6211\u4EEC\u5411\u4E00\u4E2Apromise\u6DFB\u52A0\u5904\u7406\u7A0B\u5E8F\u65F6, \u5B83\u53EF\u80FD\u5DF2\u7ECFsettled\u4E86</p><p>\u6709\u4E9B\u60C5\u51B5\u4E0B, \u8FD9\u4E9B\u5904\u7406\u7A0B\u5E8F\u4F1A\u7ACB\u5373\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5728\u521B\u5EFA\u540E\u4F1A\u7ACB\u5373\u53D8\u4E3Aresolved\u72B6\u6001</span>
<span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u6210\u529F\u6267\u884C\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>alert<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="\u4F7F\u7528promise-\u91CD\u5199loadscript" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528promise-\u91CD\u5199loadscript" aria-hidden="true">#</a> \u4F7F\u7528promise \u91CD\u5199loadScript</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">loadScript</span><span class="token punctuation">(</span><span class="token parameter">src<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  script<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>

  script<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> script<span class="token punctuation">)</span><span class="token punctuation">;</span>
  script<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Script load error for </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>src<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u91CD\u5199loadScript</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">loadScript</span><span class="token punctuation">(</span><span class="token parameter">src</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;script&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    script<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>
    script<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
    script<span class="token punctuation">.</span>onerror <span class="token operator">=</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span> <span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">script load error</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8C03\u7528</span>
<span class="token keyword">let</span> promise <span class="token operator">=</span>  <span class="token function">loadScript</span><span class="token punctuation">(</span><span class="token string">&quot;https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.11/lodash.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token parameter">script</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;\u811A\u672C\u52A0\u8F7D\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;js\u52A0\u8F7D\u5931\u8D25&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>

promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">script</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6267\u884C\u5176\u4ED6\u7684\u64CD\u4F5C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>promise \u57FA\u4E8E \u56DE\u8C03\u51FD\u6570\u7684\u597D\u5904</li></ul><table><thead><tr><th>promise</th><th>callback</th></tr></thead><tbody><tr><td>promise\u5141\u8BB8\u6309\u7167\u81EA\u7136\u89C4\u5F8B\u6765\u8FDB\u884C\u7F16\u7801, \u8FD0\u884CloadScript\u548C.then\u6765\u5904\u7406\u7ED3\u679C</td><td>\u5728\u8C03\u7528loadScript\u65F6,\u5FC5\u987B\u6709\u4E00\u4E2Acallback\u51FD\u6570\u53EF\u4F9B\u4F7F\u7528, \u5728\u8C03\u7528loadScript\u4E4B\u524D, \u5C31\u5FC5\u987B\u77E5\u9053\u5982\u4F55\u5904\u7406\u7ED3\u679C</td></tr><tr><td>\u53EF\u4EE5\u6839\u636E\u9700\u8981, \u5728promise\u4E0A\u591A\u6B21\u8C03\u7528.then, \u6BCF\u6B21\u4F1A\u6DFB\u52A0\u4E00\u4E2A\u65B0\u7684\u8BA2\u9605\u51FD\u6570</td><td>\u53EA\u80FD\u6709\u4E00\u4E2A\u56DE\u8C03</td></tr></tbody></table><h6 id="\u6D4B\u9A8C" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u9A8C" aria-hidden="true">#</a> \u6D4B\u9A8C</h6><ul><li>\u57FA\u4E8E promise \u7684\u5EF6\u65F6 \u51FD\u6570 delay(ms) \u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A promise\u3002\u8FD9\u4E2A promise \u5E94\u8BE5\u5728 ms \u6BEB\u79D2\u540E\u88AB resolve\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u5411\u5176\u4E2D\u6DFB\u52A0 .then\uFF0C\u50CF\u8FD9\u6837\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4F60\u7684\u4EE3\u7801</span>
<span class="token punctuation">}</span>

<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;runs after 3 seconds&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> ms<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,66),i=[l];function u(r,k){return s(),a("div",null,i)}var m=n(c,[["render",u],["__file","promise.html.vue"]]);export{m as default};
