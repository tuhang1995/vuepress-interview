import{_ as n,o as s,c as a,d as t}from"./app.7686b0dd.js";const p={},e=t(`<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> JavaScript</h1><h2 id="js\u7684\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#js\u7684\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> js\u7684\u6570\u636E\u7C7B\u578B</h2><ul><li>\u57FA\u672C\u7C7B\u578B <ul><li><code>Number</code> <code>String</code> <code>Boolean</code> <code>Symbol</code> <code>Undefined</code> <code>Null</code></li></ul></li><li>\u5F15\u7528\u7C7B\u578B <ul><li><code>Object</code> <code>Array</code> <code>Function</code> <code>RegExp</code> <code>Date</code></li></ul></li></ul><hr><h3 id="\u7C7B\u578B\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u5224\u65AD" aria-hidden="true">#</a> \u7C7B\u578B\u5224\u65AD</h3><ul><li>\u57FA\u672C\u7C7B\u578B <ul><li>\u4F7F\u7528 <code>typeof</code></li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">typeof</span> <span class="token number">3.14</span><span class="token punctuation">;</span> <span class="token comment">// Number</span>
<span class="token keyword">typeof</span> <span class="token boolean">false</span> <span class="token comment">// boolean</span>
<span class="token keyword">typeof</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token comment">// object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u4F7F\u7528 <code>instanceof</code></p></li><li><p><strong>instanceof \u4E0D\u80FD\u68C0\u67E5 \u5B57\u9762\u91CF\u58F0\u660E\u7684 Number, String, Boolean</strong></p></li><li><p><strong>\u4F46\u662F\u53EF\u4EE5\u68C0\u67E5<code>\u6784\u9020\u51FD\u6570</code>\u58F0\u660E\u7684</strong></p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5B57\u9762\u91CF\u58F0\u660E</span>
<span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token comment">// \u6784\u9020\u51FD\u6570\u58F0\u660E</span>
<span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>

num1 <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
num2 <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token number">100</span> <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">,</span> <span class="token comment">// false</span>
<span class="token keyword">null</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token comment">//false</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">,</span> <span class="token comment">//true</span>
<span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token comment">//true</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u4F7F\u7528 <code>constructor</code></p><ul><li><strong>constructor\u662F<code>prototype</code>\u5BF9\u8C61\u4E0A\u7684\u5C5E\u6027, \u6307\u5411\u6784\u9020\u51FD\u6570, \u82E5\u5BF9\u8C61\u4E0A\u6CA1\u6709\u5B9E\u4F8B\u5C5E\u6027\u6216\u65B9\u6CD5, \u5C31\u53BB\u539F\u578B\u94FE\u4E0A\u5BFB\u627E</strong></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span><span class="token punctuation">.</span>constructor <span class="token operator">==</span> Number<span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;tuhang&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> bool <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;tuhang&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">25</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> und  <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> nul  <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> reg  <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]{5,20}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token keyword">let</span> error<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> tom <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4E00\u4E2A\u5BF9\u8C61\u662F\u5426\u5C5E\u4E8E\u67D0\u4E2A\u7C7B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tom<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Person<span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">===</span> Person <span class="token comment">// true</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Number<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>constructor<span class="token operator">==</span>String<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bool<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Boolean<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Array<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Object<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>func<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Function<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Date<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span>constructor<span class="token operator">==</span>RegExp<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>constructor<span class="token operator">==</span>Error<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F7F\u7528Object.prototype.toString.call() \u68C0\u6D4B\u5BF9\u8C61\u5C5E\u6027</p><ul><li>\u53EF\u4EE5\u901A\u8FC7 <code>toString()</code>\u6765\u83B7\u53D6\u6BCF\u4E2A\u5BF9\u8C61\u7684\u7C7B\u578B</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> toString <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">;</span>

<span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;[object Number]&quot;</span>
<span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&#39;abcdef&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;[object String]&quot;</span>
<span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;[object Boolean]&quot;</span>
<span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;[object Array]&quot;</span>
<span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;wenzi&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">25</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;[object Object]&quot;</span>
<span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this is function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;[object Function]&quot;</span>
<span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;[object Undefined]&quot;</span>
<span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;[object Null]&quot;</span>
<span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;[object Date]&quot;</span>
<span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]{5,20}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;[object RegExp]&quot;</span>
<span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&quot;[object Error]&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="\u9632\u6296\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u9632\u6296\u51FD\u6570" aria-hidden="true">#</a> \u9632\u6296\u51FD\u6570</h2><p><strong>\u89E6\u53D1\u4E8B\u4EF6\u540E\u51FD\u6570\u4E0D\u4F1A\u7ACB\u5373\u6267\u884C\uFF0C\u800C\u662F\u5728\u505C\u6B62\u4E8B\u4EF6\u89E6\u53D1\u540E n \u6BEB\u79D2\u540E\u6267\u884C\uFF0C\u5982\u679C\u5728 n \u6BEB\u79D2\u5185\u53C8\u89E6\u53D1\u4E86\u4E8B\u4EF6\uFF0C\u5219\u4F1A\u91CD\u65B0\u8BA1\u65F6</strong></p><ul><li><strong>\u4F7F\u7528\u573A\u666F</strong></li></ul><ol><li>\u8F93\u5165\u6846\u4E2D\u9891\u7E41\u7684\u8F93\u5165\u5185\u5BB9, \u641C\u7D22\u6216\u8005\u63D0\u4EA4\u4FE1\u606F</li><li>\u9891\u7E41\u7684\u70B9\u51FB\u6309\u94AE, \u89E6\u53D1\u67D0\u4E2A\u4E8B\u4EF6</li><li>\u76D1\u542C\u6D4F\u89C8\u5668\u6EDA\u52A8\u4E8B\u4EF6, \u5B8C\u6210\u67D0\u4E9B\u7279\u5B9A\u7684\u64CD\u4F5C</li><li>\u7528\u6237\u7F29\u653E\u6D4F\u89C8\u5668\u7684resize\u4E8B\u4EF6</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">debounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u7A7A\u7684\u53D8\u91CF</span>
      <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570</span>
      <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token comment">// \u5224\u65ADtimer\u662F\u5426\u4E3A\u7A7A</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u5982\u679C\u4E0D\u4E3A\u7A7A\uFF0C\u5219\u6E05\u9664\u5B9A\u65F6\u5668timer</span>
              <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token comment">// \u7ED9timer\u8D4B\u503C\u4E00\u4E2A\u5B9A\u65F6\u5668</span>
          timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u6267\u884Cfn\u51FD\u6570\uFF0C\u6539\u53D8\u51FD\u6570\u7684this\u6307\u5411\uFF0C\u5E76\u4F20\u9012\u53C2\u6570</span>
              <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8282\u6D41\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u8282\u6D41\u51FD\u6570" aria-hidden="true">#</a> \u8282\u6D41\u51FD\u6570</h2><p><strong>\u65E0\u8BBA\u7528\u6237\u89E6\u53D1\u4E8B\u4EF6\u591A\u5C11\u6B21\uFF0C\u9644\u52A0\u7684\u51FD\u6570\u5728\u7ED9\u5B9A\u7684\u65F6\u95F4\u95F4\u9694\u5185\u53EA\u4F1A\u6267\u884C\u4E00\u6B21\u3002\uFF08\u5373\uFF1A\u56DE\u8C03\u51FD\u6570\u5728\u89C4\u5B9A\u65F6\u95F4\u5185\u6700\u591A\u6267\u884C\u4E00\u6B21</strong></p><ul><li><strong>\u4F7F\u7528\u573A\u666F</strong></li></ul><ol><li>\u76D1\u542C\u9875\u9762\u7684\u6EDA\u52A8\u4E8B\u4EF6</li><li>\u9F20\u6807\u79FB\u52A8\u4E8B\u4EF6</li><li>\u7528\u6237\u9891\u7E41\u70B9\u51FB\u64CD\u4F5C</li><li>\u6E38\u620F\u4E2D\u7684\u4E00\u4E9B\u8BBE\u8BA1...</li></ol><h2 id="\u4E8B\u4EF6\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u5FAA\u73AF" aria-hidden="true">#</a> \u4E8B\u4EF6\u5FAA\u73AF</h2><h2 id="js\u6267\u884C\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#js\u6267\u884C\u673A\u5236" aria-hidden="true">#</a> js\u6267\u884C\u673A\u5236</h2><h2 id="\u5FAE\u4EFB\u52A1" tabindex="-1"><a class="header-anchor" href="#\u5FAE\u4EFB\u52A1" aria-hidden="true">#</a> \u5FAE\u4EFB\u52A1</h2><h2 id="\u7F13\u5B58" tabindex="-1"><a class="header-anchor" href="#\u7F13\u5B58" aria-hidden="true">#</a> \u7F13\u5B58</h2><h2 id="promise\u7684\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#promise\u7684\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> promise\u7684\u5E94\u7528\u573A\u666F</h2><h2 id="\u63D0\u9AD8\u9875\u9762\u6027\u80FD\u505A\u4E86\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#\u63D0\u9AD8\u9875\u9762\u6027\u80FD\u505A\u4E86\u4EC0\u4E48" aria-hidden="true">#</a> \u63D0\u9AD8\u9875\u9762\u6027\u80FD\u505A\u4E86\u4EC0\u4E48</h2><h2 id="reduce\u5B9E\u73B0\u6570\u7EC4\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#reduce\u5B9E\u73B0\u6570\u7EC4\u53BB\u91CD" aria-hidden="true">#</a> reduce\u5B9E\u73B0\u6570\u7EC4\u53BB\u91CD</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// reduce\u8BED\u6CD5</span>
<span class="token comment">// arr.reduce((prev, cur, index, arr) =&gt; {}, init)</span>
<span class="token comment">// prev \u4E0A\u6B21\u8C03\u7528\u56DE\u8C03\u7684\u8FD4\u56DE\u503C</span>
<span class="token comment">// cur \u5F53\u524D\u5904\u7406\u7684\u6570\u7EC4\u5143\u7D20</span>
<span class="token comment">// index \u5F53\u524D\u5904\u7406\u5143\u7D20\u7684\u7D22\u5F15</span>
<span class="token comment">// arr \u539F\u6570\u7EC4</span>
<span class="token comment">// init \u8868\u793A\u521D\u59CB\u503C \u5982\u679C\u4E0D\u4F20 \u4E3A\u6570\u7EC4\u7B2C\u4E00\u4E2A\u503C</span>
<span class="token keyword">const</span> arr2 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> current</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>prev<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    prev<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> prev
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// arr2 [1,2,3,4,5,6]</span>

<span class="token comment">// reduce \u5B9E\u73B0\u6570\u7EC4\u6C42\u548C</span>

<span class="token keyword">const</span> arr3 <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> prev <span class="token operator">+</span> cur
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27),o=[e];function c(l,u){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","javascript.html.vue"]]);export{r as default};
